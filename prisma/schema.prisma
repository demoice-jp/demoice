generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @db.Char(21)
  userName    String       @unique @map("user_name") @db.VarChar(36) // ユーザー名の制限は15文字だが、削除時にユーザーIDに置き換えるため、36文字必要
  gender      Gender
  birthDate   DateTime     @map("birth_date") @db.Date
  prefecture  String       @db.Char(2)
  createdDate DateTime     @default(now()) @map("created_date") @db.Timestamptz(0)
  updatedDate DateTime     @default(now()) @map("updated_date") @db.Timestamptz(0)
  deleted     Boolean
  idProvider  ProviderId[]
  content     Content[]

  @@map("users")
}

model ProviderId {
  provider   Provider
  providerId String   @map("provider_id")
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @map("user_id") @db.Char(21)

  @@id([provider, providerId])
  @@index([userId])
  @@map("provider_ids")
}

enum Gender {
  male
  female

  @@map("gender")
}

enum Provider {
  line

  @@map("provider")
}

model Content {
  id            String         @id @db.Char(21)
  author        User           @relation(fields: [authorId], references: [id])
  authorId      String         @map("author_id") @db.Char(21)
  title         String?        @db.VarChar(60)
  content       String?
  contentHtml   String?        @map("content_html")
  contentString String?        @map("content_string")
  image         Json?
  createdDate   DateTime       @default(now()) @map("created_date") @db.Timestamptz(0)
  commitDate    DateTime?      @map("commit_date") @db.Timestamptz(0)
  policy        Policy?
  policyVersion PolicyVersion?

  @@index([authorId])
  @@map("contents")
}

model Policy {
  id            String          @id @db.Char(21)
  content       Content         @relation(fields: [contentId], references: [id])
  contentId     String          @unique @map("content_id") @db.Char(21)
  policyVersion PolicyVersion[]

  @@map("policies")
}

model PolicyVersion {
  policy    Policy  @relation(fields: [policyId], references: [id])
  policyId  String  @map("policy_id") @db.Char(21)
  version   Int
  content   Content @relation(fields: [contentId], references: [id])
  contentId String  @unique @map("content_id") @db.Char(21)

  @@id([policyId, version])
  @@map("policy_versions")
}
